//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace GeoSearch.QualityQueryServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceInfoForSummary", Namespace="http://schemas.datacontract.org/2004/07/GeoSearch.Web")]
    public partial class ServiceInfoForSummary : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string serviceTypeField;
        
        private string serviceURLField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string serviceType {
            get {
                return this.serviceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.serviceTypeField, value) != true)) {
                    this.serviceTypeField = value;
                    this.RaisePropertyChanged("serviceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string serviceURL {
            get {
                return this.serviceURLField;
            }
            set {
                if ((object.ReferenceEquals(this.serviceURLField, value) != true)) {
                    this.serviceURLField = value;
                    this.RaisePropertyChanged("serviceURL");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceQoSInfoForSummary", Namespace="http://schemas.datacontract.org/2004/07/GeoSearch.Web")]
    public partial class ServiceQoSInfoForSummary : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double fgdcStatusCheckerScoreField;
        
        private double rankValueField;
        
        private string serviceTypeField;
        
        private string serviceURLField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double fgdcStatusCheckerScore {
            get {
                return this.fgdcStatusCheckerScoreField;
            }
            set {
                if ((this.fgdcStatusCheckerScoreField.Equals(value) != true)) {
                    this.fgdcStatusCheckerScoreField = value;
                    this.RaisePropertyChanged("fgdcStatusCheckerScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double rankValue {
            get {
                return this.rankValueField;
            }
            set {
                if ((this.rankValueField.Equals(value) != true)) {
                    this.rankValueField = value;
                    this.RaisePropertyChanged("rankValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string serviceType {
            get {
                return this.serviceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.serviceTypeField, value) != true)) {
                    this.serviceTypeField = value;
                    this.RaisePropertyChanged("serviceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string serviceURL {
            get {
                return this.serviceURLField;
            }
            set {
                if ((object.ReferenceEquals(this.serviceURLField, value) != true)) {
                    this.serviceURLField = value;
                    this.RaisePropertyChanged("serviceURL");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceInfoForHistory", Namespace="http://schemas.datacontract.org/2004/07/GeoSearch.Web")]
    public partial class ServiceInfoForHistory : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string enddateField;
        
        private string serviceTypeField;
        
        private string serviceURLField;
        
        private string startdateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string enddate {
            get {
                return this.enddateField;
            }
            set {
                if ((object.ReferenceEquals(this.enddateField, value) != true)) {
                    this.enddateField = value;
                    this.RaisePropertyChanged("enddate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string serviceType {
            get {
                return this.serviceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.serviceTypeField, value) != true)) {
                    this.serviceTypeField = value;
                    this.RaisePropertyChanged("serviceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string serviceURL {
            get {
                return this.serviceURLField;
            }
            set {
                if ((object.ReferenceEquals(this.serviceURLField, value) != true)) {
                    this.serviceURLField = value;
                    this.RaisePropertyChanged("serviceURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string startdate {
            get {
                return this.startdateField;
            }
            set {
                if ((object.ReferenceEquals(this.startdateField, value) != true)) {
                    this.startdateField = value;
                    this.RaisePropertyChanged("startdate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceQoSInfoForHistory", Namespace="http://schemas.datacontract.org/2004/07/GeoSearch.Web")]
    public partial class ServiceQoSInfoForHistory : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime endDateTimeField;
        
        private System.Collections.ObjectModel.ObservableCollection<GeoSearch.QualityQueryServiceReference.ServiceQoSInfoInOneMeasurement> measurementInfoListField;
        
        private string serviceNameField;
        
        private string serviceTypeField;
        
        private string serviceURLField;
        
        private System.DateTime startDateTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime endDateTime {
            get {
                return this.endDateTimeField;
            }
            set {
                if ((this.endDateTimeField.Equals(value) != true)) {
                    this.endDateTimeField = value;
                    this.RaisePropertyChanged("endDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<GeoSearch.QualityQueryServiceReference.ServiceQoSInfoInOneMeasurement> measurementInfoList {
            get {
                return this.measurementInfoListField;
            }
            set {
                if ((object.ReferenceEquals(this.measurementInfoListField, value) != true)) {
                    this.measurementInfoListField = value;
                    this.RaisePropertyChanged("measurementInfoList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string serviceName {
            get {
                return this.serviceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.serviceNameField, value) != true)) {
                    this.serviceNameField = value;
                    this.RaisePropertyChanged("serviceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string serviceType {
            get {
                return this.serviceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.serviceTypeField, value) != true)) {
                    this.serviceTypeField = value;
                    this.RaisePropertyChanged("serviceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string serviceURL {
            get {
                return this.serviceURLField;
            }
            set {
                if ((object.ReferenceEquals(this.serviceURLField, value) != true)) {
                    this.serviceURLField = value;
                    this.RaisePropertyChanged("serviceURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime startDateTime {
            get {
                return this.startDateTimeField;
            }
            set {
                if ((this.startDateTimeField.Equals(value) != true)) {
                    this.startDateTimeField = value;
                    this.RaisePropertyChanged("startDateTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceQoSInfoInOneMeasurement", Namespace="http://schemas.datacontract.org/2004/07/GeoSearch.Web")]
    public partial class ServiceQoSInfoInOneMeasurement : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double FGDCScroeField;
        
        private System.DateTime measureDateTimeField;
        
        private double responseTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FGDCScroe {
            get {
                return this.FGDCScroeField;
            }
            set {
                if ((this.FGDCScroeField.Equals(value) != true)) {
                    this.FGDCScroeField = value;
                    this.RaisePropertyChanged("FGDCScroe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime measureDateTime {
            get {
                return this.measureDateTimeField;
            }
            set {
                if ((this.measureDateTimeField.Equals(value) != true)) {
                    this.measureDateTimeField = value;
                    this.RaisePropertyChanged("measureDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double responseTime {
            get {
                return this.responseTimeField;
            }
            set {
                if ((this.responseTimeField.Equals(value) != true)) {
                    this.responseTimeField = value;
                    this.RaisePropertyChanged("responseTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WMSLayerInfoWithQoS", Namespace="http://schemas.datacontract.org/2004/07/GeoSearch.Web")]
    public partial class WMSLayerInfoWithQoS : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<GeoSearch.QualityQueryServiceReference.WMSLayer> WMSLayersListField;
        
        private string serviceTypeField;
        
        private string serviceURLField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<GeoSearch.QualityQueryServiceReference.WMSLayer> WMSLayersList {
            get {
                return this.WMSLayersListField;
            }
            set {
                if ((object.ReferenceEquals(this.WMSLayersListField, value) != true)) {
                    this.WMSLayersListField = value;
                    this.RaisePropertyChanged("WMSLayersList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string serviceType {
            get {
                return this.serviceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.serviceTypeField, value) != true)) {
                    this.serviceTypeField = value;
                    this.RaisePropertyChanged("serviceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string serviceURL {
            get {
                return this.serviceURLField;
            }
            set {
                if ((object.ReferenceEquals(this.serviceURLField, value) != true)) {
                    this.serviceURLField = value;
                    this.RaisePropertyChanged("serviceURL");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WMSLayer", Namespace="http://schemas.datacontract.org/2004/07/GeoSearch.Web")]
    public partial class WMSLayer : object, System.ComponentModel.INotifyPropertyChanged {
        
        private GeoSearch.QualityQueryServiceReference.BBox boxField;
        
        private string nameField;
        
        private double rankValueField;
        
        private double responseTimeField;
        
        private string titleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoSearch.QualityQueryServiceReference.BBox box {
            get {
                return this.boxField;
            }
            set {
                if ((object.ReferenceEquals(this.boxField, value) != true)) {
                    this.boxField = value;
                    this.RaisePropertyChanged("box");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double rankValue {
            get {
                return this.rankValueField;
            }
            set {
                if ((this.rankValueField.Equals(value) != true)) {
                    this.rankValueField = value;
                    this.RaisePropertyChanged("rankValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double responseTime {
            get {
                return this.responseTimeField;
            }
            set {
                if ((this.responseTimeField.Equals(value) != true)) {
                    this.responseTimeField = value;
                    this.RaisePropertyChanged("responseTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string title {
            get {
                return this.titleField;
            }
            set {
                if ((object.ReferenceEquals(this.titleField, value) != true)) {
                    this.titleField = value;
                    this.RaisePropertyChanged("title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BBox", Namespace="http://schemas.datacontract.org/2004/07/GeoSearch.Web")]
    public partial class BBox : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string BBox_CRSField;
        
        private double BBox_Lower_LatField;
        
        private double BBox_Lower_LonField;
        
        private double BBox_Upper_LatField;
        
        private double BBox_Upper_LonField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BBox_CRS {
            get {
                return this.BBox_CRSField;
            }
            set {
                if ((object.ReferenceEquals(this.BBox_CRSField, value) != true)) {
                    this.BBox_CRSField = value;
                    this.RaisePropertyChanged("BBox_CRS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BBox_Lower_Lat {
            get {
                return this.BBox_Lower_LatField;
            }
            set {
                if ((this.BBox_Lower_LatField.Equals(value) != true)) {
                    this.BBox_Lower_LatField = value;
                    this.RaisePropertyChanged("BBox_Lower_Lat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BBox_Lower_Lon {
            get {
                return this.BBox_Lower_LonField;
            }
            set {
                if ((this.BBox_Lower_LonField.Equals(value) != true)) {
                    this.BBox_Lower_LonField = value;
                    this.RaisePropertyChanged("BBox_Lower_Lon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BBox_Upper_Lat {
            get {
                return this.BBox_Upper_LatField;
            }
            set {
                if ((this.BBox_Upper_LatField.Equals(value) != true)) {
                    this.BBox_Upper_LatField = value;
                    this.RaisePropertyChanged("BBox_Upper_Lat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BBox_Upper_Lon {
            get {
                return this.BBox_Upper_LonField;
            }
            set {
                if ((this.BBox_Upper_LonField.Equals(value) != true)) {
                    this.BBox_Upper_LonField = value;
                    this.RaisePropertyChanged("BBox_Upper_Lon");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LayerInfoForHistory", Namespace="http://schemas.datacontract.org/2004/07/GeoSearch.Web")]
    public partial class LayerInfoForHistory : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string enddateField;
        
        private string layerNameField;
        
        private string serviceTypeField;
        
        private string serviceURLField;
        
        private string startdateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string enddate {
            get {
                return this.enddateField;
            }
            set {
                if ((object.ReferenceEquals(this.enddateField, value) != true)) {
                    this.enddateField = value;
                    this.RaisePropertyChanged("enddate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string layerName {
            get {
                return this.layerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.layerNameField, value) != true)) {
                    this.layerNameField = value;
                    this.RaisePropertyChanged("layerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string serviceType {
            get {
                return this.serviceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.serviceTypeField, value) != true)) {
                    this.serviceTypeField = value;
                    this.RaisePropertyChanged("serviceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string serviceURL {
            get {
                return this.serviceURLField;
            }
            set {
                if ((object.ReferenceEquals(this.serviceURLField, value) != true)) {
                    this.serviceURLField = value;
                    this.RaisePropertyChanged("serviceURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string startdate {
            get {
                return this.startdateField;
            }
            set {
                if ((object.ReferenceEquals(this.startdateField, value) != true)) {
                    this.startdateField = value;
                    this.RaisePropertyChanged("startdate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LayerQoSInfoForHistory", Namespace="http://schemas.datacontract.org/2004/07/GeoSearch.Web")]
    public partial class LayerQoSInfoForHistory : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime endDateTimeField;
        
        private string layerNameField;
        
        private System.Collections.ObjectModel.ObservableCollection<GeoSearch.QualityQueryServiceReference.LayerQoSInfoInOneMeasurement> measurementInfoListField;
        
        private string serviceTypeField;
        
        private string serviceURLField;
        
        private System.DateTime startDateTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime endDateTime {
            get {
                return this.endDateTimeField;
            }
            set {
                if ((this.endDateTimeField.Equals(value) != true)) {
                    this.endDateTimeField = value;
                    this.RaisePropertyChanged("endDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string layerName {
            get {
                return this.layerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.layerNameField, value) != true)) {
                    this.layerNameField = value;
                    this.RaisePropertyChanged("layerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<GeoSearch.QualityQueryServiceReference.LayerQoSInfoInOneMeasurement> measurementInfoList {
            get {
                return this.measurementInfoListField;
            }
            set {
                if ((object.ReferenceEquals(this.measurementInfoListField, value) != true)) {
                    this.measurementInfoListField = value;
                    this.RaisePropertyChanged("measurementInfoList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string serviceType {
            get {
                return this.serviceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.serviceTypeField, value) != true)) {
                    this.serviceTypeField = value;
                    this.RaisePropertyChanged("serviceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string serviceURL {
            get {
                return this.serviceURLField;
            }
            set {
                if ((object.ReferenceEquals(this.serviceURLField, value) != true)) {
                    this.serviceURLField = value;
                    this.RaisePropertyChanged("serviceURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime startDateTime {
            get {
                return this.startDateTimeField;
            }
            set {
                if ((this.startDateTimeField.Equals(value) != true)) {
                    this.startDateTimeField = value;
                    this.RaisePropertyChanged("startDateTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LayerQoSInfoInOneMeasurement", Namespace="http://schemas.datacontract.org/2004/07/GeoSearch.Web")]
    public partial class LayerQoSInfoInOneMeasurement : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double FGDCScroeField;
        
        private System.DateTime measureDateTimeField;
        
        private double responseTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FGDCScroe {
            get {
                return this.FGDCScroeField;
            }
            set {
                if ((this.FGDCScroeField.Equals(value) != true)) {
                    this.FGDCScroeField = value;
                    this.RaisePropertyChanged("FGDCScroe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime measureDateTime {
            get {
                return this.measureDateTimeField;
            }
            set {
                if ((this.measureDateTimeField.Equals(value) != true)) {
                    this.measureDateTimeField = value;
                    this.RaisePropertyChanged("measureDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double responseTime {
            get {
                return this.responseTimeField;
            }
            set {
                if ((this.responseTimeField.Equals(value) != true)) {
                    this.responseTimeField = value;
                    this.RaisePropertyChanged("responseTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="cisc.gmu.edu/QualityQueryService", ConfigurationName="QualityQueryServiceReference.QualityQueryService")]
    public interface QualityQueryService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="cisc.gmu.edu/QualityQueryService/QualityQueryService/getServiceQoSSummaryInfo", ReplyAction="cisc.gmu.edu/QualityQueryService/QualityQueryService/getServiceQoSSummaryInfoResp" +
            "onse")]
        System.IAsyncResult BegingetServiceQoSSummaryInfo(System.Collections.ObjectModel.ObservableCollection<GeoSearch.QualityQueryServiceReference.ServiceInfoForSummary> serviceInfoList, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<GeoSearch.QualityQueryServiceReference.ServiceQoSInfoForSummary> EndgetServiceQoSSummaryInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="cisc.gmu.edu/QualityQueryService/QualityQueryService/getServiceQoSHistoricalInfo", ReplyAction="cisc.gmu.edu/QualityQueryService/QualityQueryService/getServiceQoSHistoricalInfoR" +
            "esponse")]
        System.IAsyncResult BegingetServiceQoSHistoricalInfo(System.Collections.ObjectModel.ObservableCollection<GeoSearch.QualityQueryServiceReference.ServiceInfoForHistory> serviceInfoList, System.AsyncCallback callback, object asyncState);
        
        GeoSearch.QualityQueryServiceReference.ServiceQoSInfoForHistory EndgetServiceQoSHistoricalInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="cisc.gmu.edu/QualityQueryService/QualityQueryService/getWMSLayersQoSSummaryInfo", ReplyAction="cisc.gmu.edu/QualityQueryService/QualityQueryService/getWMSLayersQoSSummaryInfoRe" +
            "sponse")]
        System.IAsyncResult BegingetWMSLayersQoSSummaryInfo(GeoSearch.QualityQueryServiceReference.ServiceInfoForSummary serviceInfo, System.AsyncCallback callback, object asyncState);
        
        GeoSearch.QualityQueryServiceReference.WMSLayerInfoWithQoS EndgetWMSLayersQoSSummaryInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="cisc.gmu.edu/QualityQueryService/QualityQueryService/getWMSLayersQoSHistoricalInf" +
            "o", ReplyAction="cisc.gmu.edu/QualityQueryService/QualityQueryService/getWMSLayersQoSHistoricalInf" +
            "oResponse")]
        System.IAsyncResult BegingetWMSLayersQoSHistoricalInfo(GeoSearch.QualityQueryServiceReference.LayerInfoForHistory layerInfoForHistory, System.AsyncCallback callback, object asyncState);
        
        GeoSearch.QualityQueryServiceReference.LayerQoSInfoForHistory EndgetWMSLayersQoSHistoricalInfo(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface QualityQueryServiceChannel : GeoSearch.QualityQueryServiceReference.QualityQueryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getServiceQoSSummaryInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getServiceQoSSummaryInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<GeoSearch.QualityQueryServiceReference.ServiceQoSInfoForSummary> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<GeoSearch.QualityQueryServiceReference.ServiceQoSInfoForSummary>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getServiceQoSHistoricalInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getServiceQoSHistoricalInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GeoSearch.QualityQueryServiceReference.ServiceQoSInfoForHistory Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GeoSearch.QualityQueryServiceReference.ServiceQoSInfoForHistory)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getWMSLayersQoSSummaryInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getWMSLayersQoSSummaryInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GeoSearch.QualityQueryServiceReference.WMSLayerInfoWithQoS Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GeoSearch.QualityQueryServiceReference.WMSLayerInfoWithQoS)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getWMSLayersQoSHistoricalInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getWMSLayersQoSHistoricalInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GeoSearch.QualityQueryServiceReference.LayerQoSInfoForHistory Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GeoSearch.QualityQueryServiceReference.LayerQoSInfoForHistory)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QualityQueryServiceClient : System.ServiceModel.ClientBase<GeoSearch.QualityQueryServiceReference.QualityQueryService>, GeoSearch.QualityQueryServiceReference.QualityQueryService {
        
        private BeginOperationDelegate onBegingetServiceQoSSummaryInfoDelegate;
        
        private EndOperationDelegate onEndgetServiceQoSSummaryInfoDelegate;
        
        private System.Threading.SendOrPostCallback ongetServiceQoSSummaryInfoCompletedDelegate;
        
        private BeginOperationDelegate onBegingetServiceQoSHistoricalInfoDelegate;
        
        private EndOperationDelegate onEndgetServiceQoSHistoricalInfoDelegate;
        
        private System.Threading.SendOrPostCallback ongetServiceQoSHistoricalInfoCompletedDelegate;
        
        private BeginOperationDelegate onBegingetWMSLayersQoSSummaryInfoDelegate;
        
        private EndOperationDelegate onEndgetWMSLayersQoSSummaryInfoDelegate;
        
        private System.Threading.SendOrPostCallback ongetWMSLayersQoSSummaryInfoCompletedDelegate;
        
        private BeginOperationDelegate onBegingetWMSLayersQoSHistoricalInfoDelegate;
        
        private EndOperationDelegate onEndgetWMSLayersQoSHistoricalInfoDelegate;
        
        private System.Threading.SendOrPostCallback ongetWMSLayersQoSHistoricalInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public QualityQueryServiceClient() {
        }
        
        public QualityQueryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public QualityQueryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QualityQueryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QualityQueryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<getServiceQoSSummaryInfoCompletedEventArgs> getServiceQoSSummaryInfoCompleted;
        
        public event System.EventHandler<getServiceQoSHistoricalInfoCompletedEventArgs> getServiceQoSHistoricalInfoCompleted;
        
        public event System.EventHandler<getWMSLayersQoSSummaryInfoCompletedEventArgs> getWMSLayersQoSSummaryInfoCompleted;
        
        public event System.EventHandler<getWMSLayersQoSHistoricalInfoCompletedEventArgs> getWMSLayersQoSHistoricalInfoCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GeoSearch.QualityQueryServiceReference.QualityQueryService.BegingetServiceQoSSummaryInfo(System.Collections.ObjectModel.ObservableCollection<GeoSearch.QualityQueryServiceReference.ServiceInfoForSummary> serviceInfoList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetServiceQoSSummaryInfo(serviceInfoList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<GeoSearch.QualityQueryServiceReference.ServiceQoSInfoForSummary> GeoSearch.QualityQueryServiceReference.QualityQueryService.EndgetServiceQoSSummaryInfo(System.IAsyncResult result) {
            return base.Channel.EndgetServiceQoSSummaryInfo(result);
        }
        
        private System.IAsyncResult OnBegingetServiceQoSSummaryInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<GeoSearch.QualityQueryServiceReference.ServiceInfoForSummary> serviceInfoList = ((System.Collections.ObjectModel.ObservableCollection<GeoSearch.QualityQueryServiceReference.ServiceInfoForSummary>)(inValues[0]));
            return ((GeoSearch.QualityQueryServiceReference.QualityQueryService)(this)).BegingetServiceQoSSummaryInfo(serviceInfoList, callback, asyncState);
        }
        
        private object[] OnEndgetServiceQoSSummaryInfo(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<GeoSearch.QualityQueryServiceReference.ServiceQoSInfoForSummary> retVal = ((GeoSearch.QualityQueryServiceReference.QualityQueryService)(this)).EndgetServiceQoSSummaryInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetServiceQoSSummaryInfoCompleted(object state) {
            if ((this.getServiceQoSSummaryInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getServiceQoSSummaryInfoCompleted(this, new getServiceQoSSummaryInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getServiceQoSSummaryInfoAsync(System.Collections.ObjectModel.ObservableCollection<GeoSearch.QualityQueryServiceReference.ServiceInfoForSummary> serviceInfoList) {
            this.getServiceQoSSummaryInfoAsync(serviceInfoList, null);
        }
        
        public void getServiceQoSSummaryInfoAsync(System.Collections.ObjectModel.ObservableCollection<GeoSearch.QualityQueryServiceReference.ServiceInfoForSummary> serviceInfoList, object userState) {
            if ((this.onBegingetServiceQoSSummaryInfoDelegate == null)) {
                this.onBegingetServiceQoSSummaryInfoDelegate = new BeginOperationDelegate(this.OnBegingetServiceQoSSummaryInfo);
            }
            if ((this.onEndgetServiceQoSSummaryInfoDelegate == null)) {
                this.onEndgetServiceQoSSummaryInfoDelegate = new EndOperationDelegate(this.OnEndgetServiceQoSSummaryInfo);
            }
            if ((this.ongetServiceQoSSummaryInfoCompletedDelegate == null)) {
                this.ongetServiceQoSSummaryInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetServiceQoSSummaryInfoCompleted);
            }
            base.InvokeAsync(this.onBegingetServiceQoSSummaryInfoDelegate, new object[] {
                        serviceInfoList}, this.onEndgetServiceQoSSummaryInfoDelegate, this.ongetServiceQoSSummaryInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GeoSearch.QualityQueryServiceReference.QualityQueryService.BegingetServiceQoSHistoricalInfo(System.Collections.ObjectModel.ObservableCollection<GeoSearch.QualityQueryServiceReference.ServiceInfoForHistory> serviceInfoList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetServiceQoSHistoricalInfo(serviceInfoList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GeoSearch.QualityQueryServiceReference.ServiceQoSInfoForHistory GeoSearch.QualityQueryServiceReference.QualityQueryService.EndgetServiceQoSHistoricalInfo(System.IAsyncResult result) {
            return base.Channel.EndgetServiceQoSHistoricalInfo(result);
        }
        
        private System.IAsyncResult OnBegingetServiceQoSHistoricalInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<GeoSearch.QualityQueryServiceReference.ServiceInfoForHistory> serviceInfoList = ((System.Collections.ObjectModel.ObservableCollection<GeoSearch.QualityQueryServiceReference.ServiceInfoForHistory>)(inValues[0]));
            return ((GeoSearch.QualityQueryServiceReference.QualityQueryService)(this)).BegingetServiceQoSHistoricalInfo(serviceInfoList, callback, asyncState);
        }
        
        private object[] OnEndgetServiceQoSHistoricalInfo(System.IAsyncResult result) {
            GeoSearch.QualityQueryServiceReference.ServiceQoSInfoForHistory retVal = ((GeoSearch.QualityQueryServiceReference.QualityQueryService)(this)).EndgetServiceQoSHistoricalInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetServiceQoSHistoricalInfoCompleted(object state) {
            if ((this.getServiceQoSHistoricalInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getServiceQoSHistoricalInfoCompleted(this, new getServiceQoSHistoricalInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getServiceQoSHistoricalInfoAsync(System.Collections.ObjectModel.ObservableCollection<GeoSearch.QualityQueryServiceReference.ServiceInfoForHistory> serviceInfoList) {
            this.getServiceQoSHistoricalInfoAsync(serviceInfoList, null);
        }
        
        public void getServiceQoSHistoricalInfoAsync(System.Collections.ObjectModel.ObservableCollection<GeoSearch.QualityQueryServiceReference.ServiceInfoForHistory> serviceInfoList, object userState) {
            if ((this.onBegingetServiceQoSHistoricalInfoDelegate == null)) {
                this.onBegingetServiceQoSHistoricalInfoDelegate = new BeginOperationDelegate(this.OnBegingetServiceQoSHistoricalInfo);
            }
            if ((this.onEndgetServiceQoSHistoricalInfoDelegate == null)) {
                this.onEndgetServiceQoSHistoricalInfoDelegate = new EndOperationDelegate(this.OnEndgetServiceQoSHistoricalInfo);
            }
            if ((this.ongetServiceQoSHistoricalInfoCompletedDelegate == null)) {
                this.ongetServiceQoSHistoricalInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetServiceQoSHistoricalInfoCompleted);
            }
            base.InvokeAsync(this.onBegingetServiceQoSHistoricalInfoDelegate, new object[] {
                        serviceInfoList}, this.onEndgetServiceQoSHistoricalInfoDelegate, this.ongetServiceQoSHistoricalInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GeoSearch.QualityQueryServiceReference.QualityQueryService.BegingetWMSLayersQoSSummaryInfo(GeoSearch.QualityQueryServiceReference.ServiceInfoForSummary serviceInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetWMSLayersQoSSummaryInfo(serviceInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GeoSearch.QualityQueryServiceReference.WMSLayerInfoWithQoS GeoSearch.QualityQueryServiceReference.QualityQueryService.EndgetWMSLayersQoSSummaryInfo(System.IAsyncResult result) {
            return base.Channel.EndgetWMSLayersQoSSummaryInfo(result);
        }
        
        private System.IAsyncResult OnBegingetWMSLayersQoSSummaryInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GeoSearch.QualityQueryServiceReference.ServiceInfoForSummary serviceInfo = ((GeoSearch.QualityQueryServiceReference.ServiceInfoForSummary)(inValues[0]));
            return ((GeoSearch.QualityQueryServiceReference.QualityQueryService)(this)).BegingetWMSLayersQoSSummaryInfo(serviceInfo, callback, asyncState);
        }
        
        private object[] OnEndgetWMSLayersQoSSummaryInfo(System.IAsyncResult result) {
            GeoSearch.QualityQueryServiceReference.WMSLayerInfoWithQoS retVal = ((GeoSearch.QualityQueryServiceReference.QualityQueryService)(this)).EndgetWMSLayersQoSSummaryInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetWMSLayersQoSSummaryInfoCompleted(object state) {
            if ((this.getWMSLayersQoSSummaryInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getWMSLayersQoSSummaryInfoCompleted(this, new getWMSLayersQoSSummaryInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getWMSLayersQoSSummaryInfoAsync(GeoSearch.QualityQueryServiceReference.ServiceInfoForSummary serviceInfo) {
            this.getWMSLayersQoSSummaryInfoAsync(serviceInfo, null);
        }
        
        public void getWMSLayersQoSSummaryInfoAsync(GeoSearch.QualityQueryServiceReference.ServiceInfoForSummary serviceInfo, object userState) {
            if ((this.onBegingetWMSLayersQoSSummaryInfoDelegate == null)) {
                this.onBegingetWMSLayersQoSSummaryInfoDelegate = new BeginOperationDelegate(this.OnBegingetWMSLayersQoSSummaryInfo);
            }
            if ((this.onEndgetWMSLayersQoSSummaryInfoDelegate == null)) {
                this.onEndgetWMSLayersQoSSummaryInfoDelegate = new EndOperationDelegate(this.OnEndgetWMSLayersQoSSummaryInfo);
            }
            if ((this.ongetWMSLayersQoSSummaryInfoCompletedDelegate == null)) {
                this.ongetWMSLayersQoSSummaryInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetWMSLayersQoSSummaryInfoCompleted);
            }
            base.InvokeAsync(this.onBegingetWMSLayersQoSSummaryInfoDelegate, new object[] {
                        serviceInfo}, this.onEndgetWMSLayersQoSSummaryInfoDelegate, this.ongetWMSLayersQoSSummaryInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GeoSearch.QualityQueryServiceReference.QualityQueryService.BegingetWMSLayersQoSHistoricalInfo(GeoSearch.QualityQueryServiceReference.LayerInfoForHistory layerInfoForHistory, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetWMSLayersQoSHistoricalInfo(layerInfoForHistory, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GeoSearch.QualityQueryServiceReference.LayerQoSInfoForHistory GeoSearch.QualityQueryServiceReference.QualityQueryService.EndgetWMSLayersQoSHistoricalInfo(System.IAsyncResult result) {
            return base.Channel.EndgetWMSLayersQoSHistoricalInfo(result);
        }
        
        private System.IAsyncResult OnBegingetWMSLayersQoSHistoricalInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GeoSearch.QualityQueryServiceReference.LayerInfoForHistory layerInfoForHistory = ((GeoSearch.QualityQueryServiceReference.LayerInfoForHistory)(inValues[0]));
            return ((GeoSearch.QualityQueryServiceReference.QualityQueryService)(this)).BegingetWMSLayersQoSHistoricalInfo(layerInfoForHistory, callback, asyncState);
        }
        
        private object[] OnEndgetWMSLayersQoSHistoricalInfo(System.IAsyncResult result) {
            GeoSearch.QualityQueryServiceReference.LayerQoSInfoForHistory retVal = ((GeoSearch.QualityQueryServiceReference.QualityQueryService)(this)).EndgetWMSLayersQoSHistoricalInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetWMSLayersQoSHistoricalInfoCompleted(object state) {
            if ((this.getWMSLayersQoSHistoricalInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getWMSLayersQoSHistoricalInfoCompleted(this, new getWMSLayersQoSHistoricalInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getWMSLayersQoSHistoricalInfoAsync(GeoSearch.QualityQueryServiceReference.LayerInfoForHistory layerInfoForHistory) {
            this.getWMSLayersQoSHistoricalInfoAsync(layerInfoForHistory, null);
        }
        
        public void getWMSLayersQoSHistoricalInfoAsync(GeoSearch.QualityQueryServiceReference.LayerInfoForHistory layerInfoForHistory, object userState) {
            if ((this.onBegingetWMSLayersQoSHistoricalInfoDelegate == null)) {
                this.onBegingetWMSLayersQoSHistoricalInfoDelegate = new BeginOperationDelegate(this.OnBegingetWMSLayersQoSHistoricalInfo);
            }
            if ((this.onEndgetWMSLayersQoSHistoricalInfoDelegate == null)) {
                this.onEndgetWMSLayersQoSHistoricalInfoDelegate = new EndOperationDelegate(this.OnEndgetWMSLayersQoSHistoricalInfo);
            }
            if ((this.ongetWMSLayersQoSHistoricalInfoCompletedDelegate == null)) {
                this.ongetWMSLayersQoSHistoricalInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetWMSLayersQoSHistoricalInfoCompleted);
            }
            base.InvokeAsync(this.onBegingetWMSLayersQoSHistoricalInfoDelegate, new object[] {
                        layerInfoForHistory}, this.onEndgetWMSLayersQoSHistoricalInfoDelegate, this.ongetWMSLayersQoSHistoricalInfoCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override GeoSearch.QualityQueryServiceReference.QualityQueryService CreateChannel() {
            return new QualityQueryServiceClientChannel(this);
        }
        
        private class QualityQueryServiceClientChannel : ChannelBase<GeoSearch.QualityQueryServiceReference.QualityQueryService>, GeoSearch.QualityQueryServiceReference.QualityQueryService {
            
            public QualityQueryServiceClientChannel(System.ServiceModel.ClientBase<GeoSearch.QualityQueryServiceReference.QualityQueryService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BegingetServiceQoSSummaryInfo(System.Collections.ObjectModel.ObservableCollection<GeoSearch.QualityQueryServiceReference.ServiceInfoForSummary> serviceInfoList, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = serviceInfoList;
                System.IAsyncResult _result = base.BeginInvoke("getServiceQoSSummaryInfo", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<GeoSearch.QualityQueryServiceReference.ServiceQoSInfoForSummary> EndgetServiceQoSSummaryInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<GeoSearch.QualityQueryServiceReference.ServiceQoSInfoForSummary> _result = ((System.Collections.ObjectModel.ObservableCollection<GeoSearch.QualityQueryServiceReference.ServiceQoSInfoForSummary>)(base.EndInvoke("getServiceQoSSummaryInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetServiceQoSHistoricalInfo(System.Collections.ObjectModel.ObservableCollection<GeoSearch.QualityQueryServiceReference.ServiceInfoForHistory> serviceInfoList, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = serviceInfoList;
                System.IAsyncResult _result = base.BeginInvoke("getServiceQoSHistoricalInfo", _args, callback, asyncState);
                return _result;
            }
            
            public GeoSearch.QualityQueryServiceReference.ServiceQoSInfoForHistory EndgetServiceQoSHistoricalInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                GeoSearch.QualityQueryServiceReference.ServiceQoSInfoForHistory _result = ((GeoSearch.QualityQueryServiceReference.ServiceQoSInfoForHistory)(base.EndInvoke("getServiceQoSHistoricalInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetWMSLayersQoSSummaryInfo(GeoSearch.QualityQueryServiceReference.ServiceInfoForSummary serviceInfo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = serviceInfo;
                System.IAsyncResult _result = base.BeginInvoke("getWMSLayersQoSSummaryInfo", _args, callback, asyncState);
                return _result;
            }
            
            public GeoSearch.QualityQueryServiceReference.WMSLayerInfoWithQoS EndgetWMSLayersQoSSummaryInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                GeoSearch.QualityQueryServiceReference.WMSLayerInfoWithQoS _result = ((GeoSearch.QualityQueryServiceReference.WMSLayerInfoWithQoS)(base.EndInvoke("getWMSLayersQoSSummaryInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetWMSLayersQoSHistoricalInfo(GeoSearch.QualityQueryServiceReference.LayerInfoForHistory layerInfoForHistory, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = layerInfoForHistory;
                System.IAsyncResult _result = base.BeginInvoke("getWMSLayersQoSHistoricalInfo", _args, callback, asyncState);
                return _result;
            }
            
            public GeoSearch.QualityQueryServiceReference.LayerQoSInfoForHistory EndgetWMSLayersQoSHistoricalInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                GeoSearch.QualityQueryServiceReference.LayerQoSInfoForHistory _result = ((GeoSearch.QualityQueryServiceReference.LayerQoSInfoForHistory)(base.EndInvoke("getWMSLayersQoSHistoricalInfo", _args, result)));
                return _result;
            }
        }
    }
}
