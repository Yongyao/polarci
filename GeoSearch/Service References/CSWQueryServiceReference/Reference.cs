//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace GeoSearch.CSWQueryServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CSWGetRecordsSearchResults", Namespace="http://schemas.datacontract.org/2004/07/GeoSearch.Web")]
    public partial class CSWGetRecordsSearchResults : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string MetadataRepositoryURLField;
        
        private string SearchStatusField;
        
        private string elementSetField;
        
        private int nextRecordField;
        
        private int numberOfRecordsMatchedField;
        
        private int numberOfRecordsReturnedField;
        
        private System.Collections.ObjectModel.ObservableCollection<GeoSearch.CSWQueryServiceReference.Record> recordListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MetadataRepositoryURL {
            get {
                return this.MetadataRepositoryURLField;
            }
            set {
                if ((object.ReferenceEquals(this.MetadataRepositoryURLField, value) != true)) {
                    this.MetadataRepositoryURLField = value;
                    this.RaisePropertyChanged("MetadataRepositoryURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SearchStatus {
            get {
                return this.SearchStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchStatusField, value) != true)) {
                    this.SearchStatusField = value;
                    this.RaisePropertyChanged("SearchStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string elementSet {
            get {
                return this.elementSetField;
            }
            set {
                if ((object.ReferenceEquals(this.elementSetField, value) != true)) {
                    this.elementSetField = value;
                    this.RaisePropertyChanged("elementSet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int nextRecord {
            get {
                return this.nextRecordField;
            }
            set {
                if ((this.nextRecordField.Equals(value) != true)) {
                    this.nextRecordField = value;
                    this.RaisePropertyChanged("nextRecord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int numberOfRecordsMatched {
            get {
                return this.numberOfRecordsMatchedField;
            }
            set {
                if ((this.numberOfRecordsMatchedField.Equals(value) != true)) {
                    this.numberOfRecordsMatchedField = value;
                    this.RaisePropertyChanged("numberOfRecordsMatched");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int numberOfRecordsReturned {
            get {
                return this.numberOfRecordsReturnedField;
            }
            set {
                if ((this.numberOfRecordsReturnedField.Equals(value) != true)) {
                    this.numberOfRecordsReturnedField = value;
                    this.RaisePropertyChanged("numberOfRecordsReturned");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<GeoSearch.CSWQueryServiceReference.Record> recordList {
            get {
                return this.recordListField;
            }
            set {
                if ((object.ReferenceEquals(this.recordListField, value) != true)) {
                    this.recordListField = value;
                    this.RaisePropertyChanged("recordList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Record", Namespace="http://schemas.datacontract.org/2004/07/GeoSearch.Web")]
    public partial class Record : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AbstractField;
        
        private string AccessURLField;
        
        private System.Collections.ObjectModel.ObservableCollection<string> DescriptiveKeywordsField;
        
        private System.Collections.ObjectModel.ObservableCollection<string> FormatsField;
        
        private string GeneralTypeField;
        
        private string GeoExtensionDescriptionField;
        
        private string IDField;
        
        private string MetadataAccessURLField;
        
        private string ProviderField;
        
        private double QualityField;
        
        private string RealServiceURLField;
        
        private double RelevanceField;
        
        private System.Collections.ObjectModel.ObservableCollection<string> SBAsField;
        
        private string ServerLocationDescriptionField;
        
        private string SourceField;
        
        private string TitleField;
        
        private string TypeField;
        
        private string URLLocationField;
        
        private GeoSearch.CSWQueryServiceReference.BBox bboxField;
        
        private bool isDataCoreField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Abstract {
            get {
                return this.AbstractField;
            }
            set {
                if ((object.ReferenceEquals(this.AbstractField, value) != true)) {
                    this.AbstractField = value;
                    this.RaisePropertyChanged("Abstract");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessURL {
            get {
                return this.AccessURLField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessURLField, value) != true)) {
                    this.AccessURLField = value;
                    this.RaisePropertyChanged("AccessURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> DescriptiveKeywords {
            get {
                return this.DescriptiveKeywordsField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptiveKeywordsField, value) != true)) {
                    this.DescriptiveKeywordsField = value;
                    this.RaisePropertyChanged("DescriptiveKeywords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> Formats {
            get {
                return this.FormatsField;
            }
            set {
                if ((object.ReferenceEquals(this.FormatsField, value) != true)) {
                    this.FormatsField = value;
                    this.RaisePropertyChanged("Formats");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeneralType {
            get {
                return this.GeneralTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GeneralTypeField, value) != true)) {
                    this.GeneralTypeField = value;
                    this.RaisePropertyChanged("GeneralType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeoExtensionDescription {
            get {
                return this.GeoExtensionDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.GeoExtensionDescriptionField, value) != true)) {
                    this.GeoExtensionDescriptionField = value;
                    this.RaisePropertyChanged("GeoExtensionDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MetadataAccessURL {
            get {
                return this.MetadataAccessURLField;
            }
            set {
                if ((object.ReferenceEquals(this.MetadataAccessURLField, value) != true)) {
                    this.MetadataAccessURLField = value;
                    this.RaisePropertyChanged("MetadataAccessURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Provider {
            get {
                return this.ProviderField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderField, value) != true)) {
                    this.ProviderField = value;
                    this.RaisePropertyChanged("Provider");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RealServiceURL {
            get {
                return this.RealServiceURLField;
            }
            set {
                if ((object.ReferenceEquals(this.RealServiceURLField, value) != true)) {
                    this.RealServiceURLField = value;
                    this.RaisePropertyChanged("RealServiceURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Relevance {
            get {
                return this.RelevanceField;
            }
            set {
                if ((this.RelevanceField.Equals(value) != true)) {
                    this.RelevanceField = value;
                    this.RaisePropertyChanged("Relevance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> SBAs {
            get {
                return this.SBAsField;
            }
            set {
                if ((object.ReferenceEquals(this.SBAsField, value) != true)) {
                    this.SBAsField = value;
                    this.RaisePropertyChanged("SBAs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerLocationDescription {
            get {
                return this.ServerLocationDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerLocationDescriptionField, value) != true)) {
                    this.ServerLocationDescriptionField = value;
                    this.RaisePropertyChanged("ServerLocationDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string URLLocation {
            get {
                return this.URLLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.URLLocationField, value) != true)) {
                    this.URLLocationField = value;
                    this.RaisePropertyChanged("URLLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoSearch.CSWQueryServiceReference.BBox bbox {
            get {
                return this.bboxField;
            }
            set {
                if ((object.ReferenceEquals(this.bboxField, value) != true)) {
                    this.bboxField = value;
                    this.RaisePropertyChanged("bbox");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isDataCore {
            get {
                return this.isDataCoreField;
            }
            set {
                if ((this.isDataCoreField.Equals(value) != true)) {
                    this.isDataCoreField = value;
                    this.RaisePropertyChanged("isDataCore");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BBox", Namespace="http://schemas.datacontract.org/2004/07/GeoSearch.Web")]
    public partial class BBox : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string BBox_CRSField;
        
        private double BBox_Lower_LatField;
        
        private double BBox_Lower_LonField;
        
        private double BBox_Upper_LatField;
        
        private double BBox_Upper_LonField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BBox_CRS {
            get {
                return this.BBox_CRSField;
            }
            set {
                if ((object.ReferenceEquals(this.BBox_CRSField, value) != true)) {
                    this.BBox_CRSField = value;
                    this.RaisePropertyChanged("BBox_CRS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BBox_Lower_Lat {
            get {
                return this.BBox_Lower_LatField;
            }
            set {
                if ((this.BBox_Lower_LatField.Equals(value) != true)) {
                    this.BBox_Lower_LatField = value;
                    this.RaisePropertyChanged("BBox_Lower_Lat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BBox_Lower_Lon {
            get {
                return this.BBox_Lower_LonField;
            }
            set {
                if ((this.BBox_Lower_LonField.Equals(value) != true)) {
                    this.BBox_Lower_LonField = value;
                    this.RaisePropertyChanged("BBox_Lower_Lon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BBox_Upper_Lat {
            get {
                return this.BBox_Upper_LatField;
            }
            set {
                if ((this.BBox_Upper_LatField.Equals(value) != true)) {
                    this.BBox_Upper_LatField = value;
                    this.RaisePropertyChanged("BBox_Upper_Lat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BBox_Upper_Lon {
            get {
                return this.BBox_Upper_LonField;
            }
            set {
                if ((this.BBox_Upper_LonField.Equals(value) != true)) {
                    this.BBox_Upper_LonField = value;
                    this.RaisePropertyChanged("BBox_Upper_Lon");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SBAVocabulary", Namespace="http://schemas.datacontract.org/2004/07/GeoSearch.Web")]
    public partial class SBAVocabulary : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<GeoSearch.CSWQueryServiceReference.SBAVocabulary> ChildrenField;
        
        private string NameField;
        
        private GeoSearch.CSWQueryServiceReference.SBAVocabulary ParentField;
        
        private string SBAVocabularyIDField;
        
        private bool isSelectedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<GeoSearch.CSWQueryServiceReference.SBAVocabulary> Children {
            get {
                return this.ChildrenField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildrenField, value) != true)) {
                    this.ChildrenField = value;
                    this.RaisePropertyChanged("Children");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoSearch.CSWQueryServiceReference.SBAVocabulary Parent {
            get {
                return this.ParentField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentField, value) != true)) {
                    this.ParentField = value;
                    this.RaisePropertyChanged("Parent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SBAVocabularyID {
            get {
                return this.SBAVocabularyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SBAVocabularyIDField, value) != true)) {
                    this.SBAVocabularyIDField = value;
                    this.RaisePropertyChanged("SBAVocabularyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isSelected {
            get {
                return this.isSelectedField;
            }
            set {
                if ((this.isSelectedField.Equals(value) != true)) {
                    this.isSelectedField = value;
                    this.RaisePropertyChanged("isSelected");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchingContent", Namespace="http://schemas.datacontract.org/2004/07/GeoSearch.Web")]
    public partial class SearchingContent : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<string> KeywordsField;
        
        private string exactPhraseField;
        
        private bool isNoResourceTypeSelectedField;
        
        private string resourceIdentificationKeywords_GEOSSDataCOREField;
        
        private GeoSearch.CSWQueryServiceReference.ResourceType resourceTypesTreeField;
        
        private string when_FromTimeField;
        
        private string when_TimeTypeField;
        
        private string when_ToTimeField;
        
        private bool when_isAnytimeField;
        
        private string where_EastField;
        
        private string where_NorthField;
        
        private string where_RegionField;
        
        private string where_RelationshipField;
        
        private string where_SouthField;
        
        private string where_WestField;
        
        private bool where_isAnyWhereField;
        
        private System.Collections.ObjectModel.ObservableCollection<string> withoutWordsInAnytextField;
        
        private System.Collections.ObjectModel.ObservableCollection<string> wordsInAbstractField;
        
        private System.Collections.ObjectModel.ObservableCollection<string> wordsInAnyTextField;
        
        private System.Collections.ObjectModel.ObservableCollection<string> wordsInTitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> Keywords {
            get {
                return this.KeywordsField;
            }
            set {
                if ((object.ReferenceEquals(this.KeywordsField, value) != true)) {
                    this.KeywordsField = value;
                    this.RaisePropertyChanged("Keywords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string exactPhrase {
            get {
                return this.exactPhraseField;
            }
            set {
                if ((object.ReferenceEquals(this.exactPhraseField, value) != true)) {
                    this.exactPhraseField = value;
                    this.RaisePropertyChanged("exactPhrase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isNoResourceTypeSelected {
            get {
                return this.isNoResourceTypeSelectedField;
            }
            set {
                if ((this.isNoResourceTypeSelectedField.Equals(value) != true)) {
                    this.isNoResourceTypeSelectedField = value;
                    this.RaisePropertyChanged("isNoResourceTypeSelected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string resourceIdentificationKeywords_GEOSSDataCORE {
            get {
                return this.resourceIdentificationKeywords_GEOSSDataCOREField;
            }
            set {
                if ((object.ReferenceEquals(this.resourceIdentificationKeywords_GEOSSDataCOREField, value) != true)) {
                    this.resourceIdentificationKeywords_GEOSSDataCOREField = value;
                    this.RaisePropertyChanged("resourceIdentificationKeywords_GEOSSDataCORE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoSearch.CSWQueryServiceReference.ResourceType resourceTypesTree {
            get {
                return this.resourceTypesTreeField;
            }
            set {
                if ((object.ReferenceEquals(this.resourceTypesTreeField, value) != true)) {
                    this.resourceTypesTreeField = value;
                    this.RaisePropertyChanged("resourceTypesTree");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string when_FromTime {
            get {
                return this.when_FromTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.when_FromTimeField, value) != true)) {
                    this.when_FromTimeField = value;
                    this.RaisePropertyChanged("when_FromTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string when_TimeType {
            get {
                return this.when_TimeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.when_TimeTypeField, value) != true)) {
                    this.when_TimeTypeField = value;
                    this.RaisePropertyChanged("when_TimeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string when_ToTime {
            get {
                return this.when_ToTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.when_ToTimeField, value) != true)) {
                    this.when_ToTimeField = value;
                    this.RaisePropertyChanged("when_ToTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool when_isAnytime {
            get {
                return this.when_isAnytimeField;
            }
            set {
                if ((this.when_isAnytimeField.Equals(value) != true)) {
                    this.when_isAnytimeField = value;
                    this.RaisePropertyChanged("when_isAnytime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string where_East {
            get {
                return this.where_EastField;
            }
            set {
                if ((object.ReferenceEquals(this.where_EastField, value) != true)) {
                    this.where_EastField = value;
                    this.RaisePropertyChanged("where_East");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string where_North {
            get {
                return this.where_NorthField;
            }
            set {
                if ((object.ReferenceEquals(this.where_NorthField, value) != true)) {
                    this.where_NorthField = value;
                    this.RaisePropertyChanged("where_North");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string where_Region {
            get {
                return this.where_RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.where_RegionField, value) != true)) {
                    this.where_RegionField = value;
                    this.RaisePropertyChanged("where_Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string where_Relationship {
            get {
                return this.where_RelationshipField;
            }
            set {
                if ((object.ReferenceEquals(this.where_RelationshipField, value) != true)) {
                    this.where_RelationshipField = value;
                    this.RaisePropertyChanged("where_Relationship");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string where_South {
            get {
                return this.where_SouthField;
            }
            set {
                if ((object.ReferenceEquals(this.where_SouthField, value) != true)) {
                    this.where_SouthField = value;
                    this.RaisePropertyChanged("where_South");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string where_West {
            get {
                return this.where_WestField;
            }
            set {
                if ((object.ReferenceEquals(this.where_WestField, value) != true)) {
                    this.where_WestField = value;
                    this.RaisePropertyChanged("where_West");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool where_isAnyWhere {
            get {
                return this.where_isAnyWhereField;
            }
            set {
                if ((this.where_isAnyWhereField.Equals(value) != true)) {
                    this.where_isAnyWhereField = value;
                    this.RaisePropertyChanged("where_isAnyWhere");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> withoutWordsInAnytext {
            get {
                return this.withoutWordsInAnytextField;
            }
            set {
                if ((object.ReferenceEquals(this.withoutWordsInAnytextField, value) != true)) {
                    this.withoutWordsInAnytextField = value;
                    this.RaisePropertyChanged("withoutWordsInAnytext");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> wordsInAbstract {
            get {
                return this.wordsInAbstractField;
            }
            set {
                if ((object.ReferenceEquals(this.wordsInAbstractField, value) != true)) {
                    this.wordsInAbstractField = value;
                    this.RaisePropertyChanged("wordsInAbstract");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> wordsInAnyText {
            get {
                return this.wordsInAnyTextField;
            }
            set {
                if ((object.ReferenceEquals(this.wordsInAnyTextField, value) != true)) {
                    this.wordsInAnyTextField = value;
                    this.RaisePropertyChanged("wordsInAnyText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> wordsInTitle {
            get {
                return this.wordsInTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.wordsInTitleField, value) != true)) {
                    this.wordsInTitleField = value;
                    this.RaisePropertyChanged("wordsInTitle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResourceType", Namespace="http://schemas.datacontract.org/2004/07/GeoSearch.Web")]
    public partial class ResourceType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<GeoSearch.CSWQueryServiceReference.ResourceType> ChildrenField;
        
        private string NameField;
        
        private GeoSearch.CSWQueryServiceReference.ResourceType ParentField;
        
        private string ResourceTypeIDField;
        
        private bool isSelectedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<GeoSearch.CSWQueryServiceReference.ResourceType> Children {
            get {
                return this.ChildrenField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildrenField, value) != true)) {
                    this.ChildrenField = value;
                    this.RaisePropertyChanged("Children");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoSearch.CSWQueryServiceReference.ResourceType Parent {
            get {
                return this.ParentField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentField, value) != true)) {
                    this.ParentField = value;
                    this.RaisePropertyChanged("Parent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceTypeID {
            get {
                return this.ResourceTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceTypeIDField, value) != true)) {
                    this.ResourceTypeIDField = value;
                    this.RaisePropertyChanged("ResourceTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isSelected {
            get {
                return this.isSelectedField;
            }
            set {
                if ((this.isSelectedField.Equals(value) != true)) {
                    this.isSelectedField = value;
                    this.RaisePropertyChanged("isSelected");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="cisc.gmu.edu/MetadataSearching", ConfigurationName="CSWQueryServiceReference.CSWQueryService")]
    public interface CSWQueryService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="cisc.gmu.edu/MetadataSearching/CSWQueryService/getRecords_BasicSearch", ReplyAction="cisc.gmu.edu/MetadataSearching/CSWQueryService/getRecords_BasicSearchResponse")]
        System.IAsyncResult BegingetRecords_BasicSearch(string searchingContent, string startPosition, string maxRecords, string CSWURL, bool queryServicePerformanceScoreAtServerSide, bool calculateRelevanceAtServerSide, System.AsyncCallback callback, object asyncState);
        
        GeoSearch.CSWQueryServiceReference.CSWGetRecordsSearchResults EndgetRecords_BasicSearch(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="cisc.gmu.edu/MetadataSearching/CSWQueryService/getRecords_QuickSearchBySBA", ReplyAction="cisc.gmu.edu/MetadataSearching/CSWQueryService/getRecords_QuickSearchBySBARespons" +
            "e")]
        System.IAsyncResult BegingetRecords_QuickSearchBySBA(GeoSearch.CSWQueryServiceReference.SBAVocabulary vocabulary, string startPosition, string maxRecords, string CSWURL, bool queryServicePerformanceScoreAtServerSide, bool calculateRelevanceAtServerSide, System.AsyncCallback callback, object asyncState);
        
        GeoSearch.CSWQueryServiceReference.CSWGetRecordsSearchResults EndgetRecords_QuickSearchBySBA(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="cisc.gmu.edu/MetadataSearching/CSWQueryService/getRecords_AdvancedSearch", ReplyAction="cisc.gmu.edu/MetadataSearching/CSWQueryService/getRecords_AdvancedSearchResponse")]
        System.IAsyncResult BegingetRecords_AdvancedSearch(GeoSearch.CSWQueryServiceReference.SearchingContent searchingContent, string startPosition, string maxRecords, string CSWURL, bool queryServicePerformanceScoreAtServerSide, bool calculateRelevanceAtServerSide, System.AsyncCallback callback, object asyncState);
        
        GeoSearch.CSWQueryServiceReference.CSWGetRecordsSearchResults EndgetRecords_AdvancedSearch(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CSWQueryServiceChannel : GeoSearch.CSWQueryServiceReference.CSWQueryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getRecords_BasicSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getRecords_BasicSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GeoSearch.CSWQueryServiceReference.CSWGetRecordsSearchResults Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GeoSearch.CSWQueryServiceReference.CSWGetRecordsSearchResults)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getRecords_QuickSearchBySBACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getRecords_QuickSearchBySBACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GeoSearch.CSWQueryServiceReference.CSWGetRecordsSearchResults Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GeoSearch.CSWQueryServiceReference.CSWGetRecordsSearchResults)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getRecords_AdvancedSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getRecords_AdvancedSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GeoSearch.CSWQueryServiceReference.CSWGetRecordsSearchResults Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GeoSearch.CSWQueryServiceReference.CSWGetRecordsSearchResults)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CSWQueryServiceClient : System.ServiceModel.ClientBase<GeoSearch.CSWQueryServiceReference.CSWQueryService>, GeoSearch.CSWQueryServiceReference.CSWQueryService {
        
        private BeginOperationDelegate onBegingetRecords_BasicSearchDelegate;
        
        private EndOperationDelegate onEndgetRecords_BasicSearchDelegate;
        
        private System.Threading.SendOrPostCallback ongetRecords_BasicSearchCompletedDelegate;
        
        private BeginOperationDelegate onBegingetRecords_QuickSearchBySBADelegate;
        
        private EndOperationDelegate onEndgetRecords_QuickSearchBySBADelegate;
        
        private System.Threading.SendOrPostCallback ongetRecords_QuickSearchBySBACompletedDelegate;
        
        private BeginOperationDelegate onBegingetRecords_AdvancedSearchDelegate;
        
        private EndOperationDelegate onEndgetRecords_AdvancedSearchDelegate;
        
        private System.Threading.SendOrPostCallback ongetRecords_AdvancedSearchCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public CSWQueryServiceClient() {
        }
        
        public CSWQueryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CSWQueryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CSWQueryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CSWQueryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<getRecords_BasicSearchCompletedEventArgs> getRecords_BasicSearchCompleted;
        
        public event System.EventHandler<getRecords_QuickSearchBySBACompletedEventArgs> getRecords_QuickSearchBySBACompleted;
        
        public event System.EventHandler<getRecords_AdvancedSearchCompletedEventArgs> getRecords_AdvancedSearchCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GeoSearch.CSWQueryServiceReference.CSWQueryService.BegingetRecords_BasicSearch(string searchingContent, string startPosition, string maxRecords, string CSWURL, bool queryServicePerformanceScoreAtServerSide, bool calculateRelevanceAtServerSide, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetRecords_BasicSearch(searchingContent, startPosition, maxRecords, CSWURL, queryServicePerformanceScoreAtServerSide, calculateRelevanceAtServerSide, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GeoSearch.CSWQueryServiceReference.CSWGetRecordsSearchResults GeoSearch.CSWQueryServiceReference.CSWQueryService.EndgetRecords_BasicSearch(System.IAsyncResult result) {
            return base.Channel.EndgetRecords_BasicSearch(result);
        }
        
        private System.IAsyncResult OnBegingetRecords_BasicSearch(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string searchingContent = ((string)(inValues[0]));
            string startPosition = ((string)(inValues[1]));
            string maxRecords = ((string)(inValues[2]));
            string CSWURL = ((string)(inValues[3]));
            bool queryServicePerformanceScoreAtServerSide = ((bool)(inValues[4]));
            bool calculateRelevanceAtServerSide = ((bool)(inValues[5]));
            return ((GeoSearch.CSWQueryServiceReference.CSWQueryService)(this)).BegingetRecords_BasicSearch(searchingContent, startPosition, maxRecords, CSWURL, queryServicePerformanceScoreAtServerSide, calculateRelevanceAtServerSide, callback, asyncState);
        }
        
        private object[] OnEndgetRecords_BasicSearch(System.IAsyncResult result) {
            GeoSearch.CSWQueryServiceReference.CSWGetRecordsSearchResults retVal = ((GeoSearch.CSWQueryServiceReference.CSWQueryService)(this)).EndgetRecords_BasicSearch(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetRecords_BasicSearchCompleted(object state) {
            if ((this.getRecords_BasicSearchCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getRecords_BasicSearchCompleted(this, new getRecords_BasicSearchCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getRecords_BasicSearchAsync(string searchingContent, string startPosition, string maxRecords, string CSWURL, bool queryServicePerformanceScoreAtServerSide, bool calculateRelevanceAtServerSide) {
            this.getRecords_BasicSearchAsync(searchingContent, startPosition, maxRecords, CSWURL, queryServicePerformanceScoreAtServerSide, calculateRelevanceAtServerSide, null);
        }
        
        public void getRecords_BasicSearchAsync(string searchingContent, string startPosition, string maxRecords, string CSWURL, bool queryServicePerformanceScoreAtServerSide, bool calculateRelevanceAtServerSide, object userState) {
            if ((this.onBegingetRecords_BasicSearchDelegate == null)) {
                this.onBegingetRecords_BasicSearchDelegate = new BeginOperationDelegate(this.OnBegingetRecords_BasicSearch);
            }
            if ((this.onEndgetRecords_BasicSearchDelegate == null)) {
                this.onEndgetRecords_BasicSearchDelegate = new EndOperationDelegate(this.OnEndgetRecords_BasicSearch);
            }
            if ((this.ongetRecords_BasicSearchCompletedDelegate == null)) {
                this.ongetRecords_BasicSearchCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetRecords_BasicSearchCompleted);
            }
            base.InvokeAsync(this.onBegingetRecords_BasicSearchDelegate, new object[] {
                        searchingContent,
                        startPosition,
                        maxRecords,
                        CSWURL,
                        queryServicePerformanceScoreAtServerSide,
                        calculateRelevanceAtServerSide}, this.onEndgetRecords_BasicSearchDelegate, this.ongetRecords_BasicSearchCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GeoSearch.CSWQueryServiceReference.CSWQueryService.BegingetRecords_QuickSearchBySBA(GeoSearch.CSWQueryServiceReference.SBAVocabulary vocabulary, string startPosition, string maxRecords, string CSWURL, bool queryServicePerformanceScoreAtServerSide, bool calculateRelevanceAtServerSide, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetRecords_QuickSearchBySBA(vocabulary, startPosition, maxRecords, CSWURL, queryServicePerformanceScoreAtServerSide, calculateRelevanceAtServerSide, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GeoSearch.CSWQueryServiceReference.CSWGetRecordsSearchResults GeoSearch.CSWQueryServiceReference.CSWQueryService.EndgetRecords_QuickSearchBySBA(System.IAsyncResult result) {
            return base.Channel.EndgetRecords_QuickSearchBySBA(result);
        }
        
        private System.IAsyncResult OnBegingetRecords_QuickSearchBySBA(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GeoSearch.CSWQueryServiceReference.SBAVocabulary vocabulary = ((GeoSearch.CSWQueryServiceReference.SBAVocabulary)(inValues[0]));
            string startPosition = ((string)(inValues[1]));
            string maxRecords = ((string)(inValues[2]));
            string CSWURL = ((string)(inValues[3]));
            bool queryServicePerformanceScoreAtServerSide = ((bool)(inValues[4]));
            bool calculateRelevanceAtServerSide = ((bool)(inValues[5]));
            return ((GeoSearch.CSWQueryServiceReference.CSWQueryService)(this)).BegingetRecords_QuickSearchBySBA(vocabulary, startPosition, maxRecords, CSWURL, queryServicePerformanceScoreAtServerSide, calculateRelevanceAtServerSide, callback, asyncState);
        }
        
        private object[] OnEndgetRecords_QuickSearchBySBA(System.IAsyncResult result) {
            GeoSearch.CSWQueryServiceReference.CSWGetRecordsSearchResults retVal = ((GeoSearch.CSWQueryServiceReference.CSWQueryService)(this)).EndgetRecords_QuickSearchBySBA(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetRecords_QuickSearchBySBACompleted(object state) {
            if ((this.getRecords_QuickSearchBySBACompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getRecords_QuickSearchBySBACompleted(this, new getRecords_QuickSearchBySBACompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getRecords_QuickSearchBySBAAsync(GeoSearch.CSWQueryServiceReference.SBAVocabulary vocabulary, string startPosition, string maxRecords, string CSWURL, bool queryServicePerformanceScoreAtServerSide, bool calculateRelevanceAtServerSide) {
            this.getRecords_QuickSearchBySBAAsync(vocabulary, startPosition, maxRecords, CSWURL, queryServicePerformanceScoreAtServerSide, calculateRelevanceAtServerSide, null);
        }
        
        public void getRecords_QuickSearchBySBAAsync(GeoSearch.CSWQueryServiceReference.SBAVocabulary vocabulary, string startPosition, string maxRecords, string CSWURL, bool queryServicePerformanceScoreAtServerSide, bool calculateRelevanceAtServerSide, object userState) {
            if ((this.onBegingetRecords_QuickSearchBySBADelegate == null)) {
                this.onBegingetRecords_QuickSearchBySBADelegate = new BeginOperationDelegate(this.OnBegingetRecords_QuickSearchBySBA);
            }
            if ((this.onEndgetRecords_QuickSearchBySBADelegate == null)) {
                this.onEndgetRecords_QuickSearchBySBADelegate = new EndOperationDelegate(this.OnEndgetRecords_QuickSearchBySBA);
            }
            if ((this.ongetRecords_QuickSearchBySBACompletedDelegate == null)) {
                this.ongetRecords_QuickSearchBySBACompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetRecords_QuickSearchBySBACompleted);
            }
            base.InvokeAsync(this.onBegingetRecords_QuickSearchBySBADelegate, new object[] {
                        vocabulary,
                        startPosition,
                        maxRecords,
                        CSWURL,
                        queryServicePerformanceScoreAtServerSide,
                        calculateRelevanceAtServerSide}, this.onEndgetRecords_QuickSearchBySBADelegate, this.ongetRecords_QuickSearchBySBACompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GeoSearch.CSWQueryServiceReference.CSWQueryService.BegingetRecords_AdvancedSearch(GeoSearch.CSWQueryServiceReference.SearchingContent searchingContent, string startPosition, string maxRecords, string CSWURL, bool queryServicePerformanceScoreAtServerSide, bool calculateRelevanceAtServerSide, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetRecords_AdvancedSearch(searchingContent, startPosition, maxRecords, CSWURL, queryServicePerformanceScoreAtServerSide, calculateRelevanceAtServerSide, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GeoSearch.CSWQueryServiceReference.CSWGetRecordsSearchResults GeoSearch.CSWQueryServiceReference.CSWQueryService.EndgetRecords_AdvancedSearch(System.IAsyncResult result) {
            return base.Channel.EndgetRecords_AdvancedSearch(result);
        }
        
        private System.IAsyncResult OnBegingetRecords_AdvancedSearch(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GeoSearch.CSWQueryServiceReference.SearchingContent searchingContent = ((GeoSearch.CSWQueryServiceReference.SearchingContent)(inValues[0]));
            string startPosition = ((string)(inValues[1]));
            string maxRecords = ((string)(inValues[2]));
            string CSWURL = ((string)(inValues[3]));
            bool queryServicePerformanceScoreAtServerSide = ((bool)(inValues[4]));
            bool calculateRelevanceAtServerSide = ((bool)(inValues[5]));
            return ((GeoSearch.CSWQueryServiceReference.CSWQueryService)(this)).BegingetRecords_AdvancedSearch(searchingContent, startPosition, maxRecords, CSWURL, queryServicePerformanceScoreAtServerSide, calculateRelevanceAtServerSide, callback, asyncState);
        }
        
        private object[] OnEndgetRecords_AdvancedSearch(System.IAsyncResult result) {
            GeoSearch.CSWQueryServiceReference.CSWGetRecordsSearchResults retVal = ((GeoSearch.CSWQueryServiceReference.CSWQueryService)(this)).EndgetRecords_AdvancedSearch(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetRecords_AdvancedSearchCompleted(object state) {
            if ((this.getRecords_AdvancedSearchCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getRecords_AdvancedSearchCompleted(this, new getRecords_AdvancedSearchCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getRecords_AdvancedSearchAsync(GeoSearch.CSWQueryServiceReference.SearchingContent searchingContent, string startPosition, string maxRecords, string CSWURL, bool queryServicePerformanceScoreAtServerSide, bool calculateRelevanceAtServerSide) {
            this.getRecords_AdvancedSearchAsync(searchingContent, startPosition, maxRecords, CSWURL, queryServicePerformanceScoreAtServerSide, calculateRelevanceAtServerSide, null);
        }
        
        public void getRecords_AdvancedSearchAsync(GeoSearch.CSWQueryServiceReference.SearchingContent searchingContent, string startPosition, string maxRecords, string CSWURL, bool queryServicePerformanceScoreAtServerSide, bool calculateRelevanceAtServerSide, object userState) {
            if ((this.onBegingetRecords_AdvancedSearchDelegate == null)) {
                this.onBegingetRecords_AdvancedSearchDelegate = new BeginOperationDelegate(this.OnBegingetRecords_AdvancedSearch);
            }
            if ((this.onEndgetRecords_AdvancedSearchDelegate == null)) {
                this.onEndgetRecords_AdvancedSearchDelegate = new EndOperationDelegate(this.OnEndgetRecords_AdvancedSearch);
            }
            if ((this.ongetRecords_AdvancedSearchCompletedDelegate == null)) {
                this.ongetRecords_AdvancedSearchCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetRecords_AdvancedSearchCompleted);
            }
            base.InvokeAsync(this.onBegingetRecords_AdvancedSearchDelegate, new object[] {
                        searchingContent,
                        startPosition,
                        maxRecords,
                        CSWURL,
                        queryServicePerformanceScoreAtServerSide,
                        calculateRelevanceAtServerSide}, this.onEndgetRecords_AdvancedSearchDelegate, this.ongetRecords_AdvancedSearchCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override GeoSearch.CSWQueryServiceReference.CSWQueryService CreateChannel() {
            return new CSWQueryServiceClientChannel(this);
        }
        
        private class CSWQueryServiceClientChannel : ChannelBase<GeoSearch.CSWQueryServiceReference.CSWQueryService>, GeoSearch.CSWQueryServiceReference.CSWQueryService {
            
            public CSWQueryServiceClientChannel(System.ServiceModel.ClientBase<GeoSearch.CSWQueryServiceReference.CSWQueryService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BegingetRecords_BasicSearch(string searchingContent, string startPosition, string maxRecords, string CSWURL, bool queryServicePerformanceScoreAtServerSide, bool calculateRelevanceAtServerSide, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = searchingContent;
                _args[1] = startPosition;
                _args[2] = maxRecords;
                _args[3] = CSWURL;
                _args[4] = queryServicePerformanceScoreAtServerSide;
                _args[5] = calculateRelevanceAtServerSide;
                System.IAsyncResult _result = base.BeginInvoke("getRecords_BasicSearch", _args, callback, asyncState);
                return _result;
            }
            
            public GeoSearch.CSWQueryServiceReference.CSWGetRecordsSearchResults EndgetRecords_BasicSearch(System.IAsyncResult result) {
                object[] _args = new object[0];
                GeoSearch.CSWQueryServiceReference.CSWGetRecordsSearchResults _result = ((GeoSearch.CSWQueryServiceReference.CSWGetRecordsSearchResults)(base.EndInvoke("getRecords_BasicSearch", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetRecords_QuickSearchBySBA(GeoSearch.CSWQueryServiceReference.SBAVocabulary vocabulary, string startPosition, string maxRecords, string CSWURL, bool queryServicePerformanceScoreAtServerSide, bool calculateRelevanceAtServerSide, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = vocabulary;
                _args[1] = startPosition;
                _args[2] = maxRecords;
                _args[3] = CSWURL;
                _args[4] = queryServicePerformanceScoreAtServerSide;
                _args[5] = calculateRelevanceAtServerSide;
                System.IAsyncResult _result = base.BeginInvoke("getRecords_QuickSearchBySBA", _args, callback, asyncState);
                return _result;
            }
            
            public GeoSearch.CSWQueryServiceReference.CSWGetRecordsSearchResults EndgetRecords_QuickSearchBySBA(System.IAsyncResult result) {
                object[] _args = new object[0];
                GeoSearch.CSWQueryServiceReference.CSWGetRecordsSearchResults _result = ((GeoSearch.CSWQueryServiceReference.CSWGetRecordsSearchResults)(base.EndInvoke("getRecords_QuickSearchBySBA", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetRecords_AdvancedSearch(GeoSearch.CSWQueryServiceReference.SearchingContent searchingContent, string startPosition, string maxRecords, string CSWURL, bool queryServicePerformanceScoreAtServerSide, bool calculateRelevanceAtServerSide, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = searchingContent;
                _args[1] = startPosition;
                _args[2] = maxRecords;
                _args[3] = CSWURL;
                _args[4] = queryServicePerformanceScoreAtServerSide;
                _args[5] = calculateRelevanceAtServerSide;
                System.IAsyncResult _result = base.BeginInvoke("getRecords_AdvancedSearch", _args, callback, asyncState);
                return _result;
            }
            
            public GeoSearch.CSWQueryServiceReference.CSWGetRecordsSearchResults EndgetRecords_AdvancedSearch(System.IAsyncResult result) {
                object[] _args = new object[0];
                GeoSearch.CSWQueryServiceReference.CSWGetRecordsSearchResults _result = ((GeoSearch.CSWQueryServiceReference.CSWGetRecordsSearchResults)(base.EndInvoke("getRecords_AdvancedSearch", _args, result)));
                return _result;
            }
        }
    }
}
